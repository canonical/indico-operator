name: Publish to edge

# On push to a "special" branch, we:
# * always publish to charmhub at latest/edge/branchname
# * always run tests
# where a "special" branch is one of main/master or track/**, as
# by convention these branches are the source for a corresponding
# charmhub edge channel.

on:
  push:
    branches:
      - master
      - main
      - track/**

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  lib-check:
    # This job is the precondition of all jobs that need the Charmhub token.
    # By disabling this job on forked repositories, we can achieve 
    # disabling the publishing to Charmhub action on forked repositories 
    # while still running tests on push events
    if: github.repository_owner == 'canonical'
    name: Check libraries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@1.0.3
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  tests:
    name: Run tests
    uses: ./.github/workflows/test.yaml
  integration-tests:
    name: Run integration tests
    uses: ./.github/workflows/integration_test.yaml
  publish-images:
    name: Publish images to charmhub
    runs-on: ubuntu-latest
    needs: [ tests, integration-tests ]
    if: ${{ !failure() && needs.integration-tests.steps.get-images.outputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.integration-tests.steps.get-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - name: Install charmcraft
        run: sudo snap install charmcraft --classic
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish image
        env:
          CHARMCRAFT_AUTH:  ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          image = ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.image }}:${{ github.run_id }}
          charmName = $(yq '.name' metadata.yaml)
          docker pull $image
          imageId = $(docker images $image --format "{{.ID}")
          charmcraft upload-resource $charmName ${{ matrix.image }}-image --image=$imageId --verbosity=trace
  select-channel:
    name: Select target channel
    runs-on: ubuntu-latest
    outputs:
      channel: ${{ steps.channel.outputs.name }}
    steps:
      - name: Select charmhub channel
        id: channel
        uses: canonical/charming-actions/channel@1.0.3
  publish-charm:
    name: Publish charm to ${{ needs.select-channel.outputs.channel }}
    runs-on: ubuntu-latest
    needs: [ select-channel, publish-images ]
    if:  ${{ !failure() }}
    steps:
      - uses: actions/checkout@v3
      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.0.0-rc
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ needs.select-channel.outputs.channel }}
          upload-image: false
