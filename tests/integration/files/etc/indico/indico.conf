import ast
import os

import json

env_file_path = "/srv/indico/env.json"
conf = {}
if os.path.isfile(env_file_path):
    with open(env_file_path, "r") as env_file:
        conf = json.loads(env_file.read())


# env has priority, we change conf values accordingly to it
def _get_value(conf, key, default = None):
    import os
    if value := os.environ.get(key, default):
        conf[key] = value
        return value
    return conf.get(key, default)

ATTACHMENT_STORAGE = _get_value(conf, 'ATTACHMENT_STORAGE', 'default')
AUTH_PROVIDERS = ast.literal_eval(_get_value(conf, 'INDICO_AUTH_PROVIDERS', 'None')) or {}
BASE_URL = f"{_get_value(conf, 'SERVICE_SCHEME')}://{_get_value(conf, 'SERVICE_HOSTNAME')}"
CACHE_DIR = "/srv/indico/cache"
CELERY_CONFIG = ast.literal_eval(_get_value(conf, 'CELERY_CONFIG', 'None')) or {}
CELERY_BROKER = _get_value(conf, 'CELERY_BROKER')
CUSTOMIZATION_DIR = '/srv/indico/custom'
CUSTOMIZATION_DEBUG = _get_value(conf, 'INDICO_CUSTOMIZATION_DEBUG', False)
DEFAULT_LOCALE = _get_value(conf, 'INDICO_DEFAULT_LOCALE', 'en_GB')
DEFAULT_TIMEZONE = _get_value(conf, 'INDICO_DEFAULT_TIMEZONE', 'UTC')
ENABLE_ROOMBOOKING = _get_value(conf, 'ENABLE_ROOMBOOKING', False)
IDENTITY_PROVIDERS = ast.literal_eval(_get_value(conf, 'INDICO_IDENTITY_PROVIDERS', 'None')) or {}
LOCAL_IDENTITIES = not IDENTITY_PROVIDERS
LOG_DIR = "/srv/indico/log"
LOGGING_CONFIG_FILE = "/etc/logging.yaml"
LOGO_URL = _get_value(conf, 'INDICO_LOGO_URL')
if os.path.isfile(CUSTOMIZATION_DIR + "/files/logo.png"):
    LOGO_URL = "/static/custom/files/logo.png"
NO_REPLY_EMAIL = _get_value(conf, 'INDICO_NO_REPLY_EMAIL', "noreply-root@localhost")
PLUGINS = tuple(x for x in _get_value(conf, 'INDICO_EXTRA_PLUGINS', '').split(',') if x.strip())
PUBLIC_SUPPORT_EMAIL = _get_value(conf, 'INDICO_PUBLIC_SUPPORT_EMAIL', "root@localhost")
REDIS_CACHE_URL = _get_value(conf, 'REDIS_CACHE_URL')
ROUTE_OLD_URLS = _get_value(conf, 'INDICO_ROUTE_OLD_URLS', False)
SECRET_KEY = _get_value(conf, 'SECRET_KEY')
SENTRY_DSN = _get_value(conf, 'SENTRY_DSN', None)
if _get_value(conf, 'SERVICE_PORT'):
    BASE_URL += ':' + _get_value(conf, 'SERVICE_PORT')
SMTP_ALLOWED_SENDERS = {NO_REPLY_EMAIL}
SMTP_LOGIN = _get_value(conf, 'SMTP_LOGIN')
SMTP_SENDER_FALLBACK = NO_REPLY_EMAIL
SMTP_SERVER = _get_value(conf, 'SMTP_SERVER'), _get_value(conf, 'SMTP_PORT')
SMTP_PASSWORD = _get_value(conf, 'SMTP_PASSWORD')
SMTP_USE_TLS = _get_value(conf, 'SMTP_USE_TLS')
STORAGE_BACKENDS = ast.literal_eval(_get_value(conf, 'STORAGE_DICT', 'None'))
SUPPORT_EMAIL = _get_value(conf, 'INDICO_SUPPORT_EMAIL', "root@localhost")
SYSTEM_NOTICES_URL = None
SQLALCHEMY_DATABASE_URI = _get_value(conf, 'INDICO_DB_URI')
SQLALCHEMY_POOL_SIZE = 20
SQLALCHEMY_POOL_TIMEOUT = 5
TEMP_DIR = "/srv/indico/tmp"
USE_PROXY = True

with open(env_file_path, "w") as env_file:
    env_file.write(json.dumps(conf))
